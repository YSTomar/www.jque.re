function isSvgElement(element){return typeof window.SVGElement!=="undefined"&&element[0] instanceof window.SVGElement;}function computeElementSize(element){var rect=element[0].getBoundingClientRect();return{width:rect.width,height:rect.height};}function initMouseTracking(){var lastScrollX=0,lastScrollY=0;if(!session.mouseTrackingActive){session.mouseTrackingActive=true;$(function getScrollPos(){lastScrollX=$document.scrollLeft();lastScrollY=$document.scrollTop();});$document.on({mousemove:trackMouse,scroll:function trackScroll(){var x=$document.scrollLeft(),y=$document.scrollTop();if(x!==lastScrollX){session.currentX+=x-lastScrollX;lastScrollX=x;}if(y!==lastScrollY){session.currentY+=y-lastScrollY;lastScrollY=y;}}});}}function trackMouse(event){session.currentX=event.pageX;session.currentY=event.pageY;}function isMouseOver(element){var elementPosition=element.offset(),elementSize=computeElementSize(element);return session.currentX>=elementPosition.left&&session.currentX<=elementPosition.left+elementSize.width&&session.currentY>=elementPosition.top&&session.currentY<=elementPosition.top+elementSize.height;}function getViewportCollisions(coords,elementWidth,elementHeight){var scrollLeft=$window.scrollLeft(),scrollTop=$window.scrollTop(),windowWidth=$window.width(),windowHeight=$window.height(),collisions=[];if(coords.top<scrollTop){collisions.push("top");}if(coords.top+elementHeight>scrollTop+windowHeight){collisions.push("bottom");}if(coords.left<scrollLeft||coords.right+elementWidth>scrollLeft+windowWidth){collisions.push("left");}if(coords.left+elementWidth>scrollLeft+windowWidth||coords.right<scrollLeft){collisions.push("right");}return collisions;}