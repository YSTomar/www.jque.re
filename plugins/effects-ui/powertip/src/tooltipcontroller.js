function TooltipController(options){var placementCalculator=new PlacementCalculator(),tipElement=$("#"+options.popupId);if(tipElement.length===0){tipElement=$("<div/>",{id:options.popupId});if($body.length===0){$body=$("body");}$body.append(tipElement);}if(options.followMouse){if(!tipElement.data(DATA_HASMOUSEMOVE)){$document.on({mousemove:positionTipOnCursor,scroll:positionTipOnCursor});tipElement.data(DATA_HASMOUSEMOVE,true);}}if(options.mouseOnToPopup){tipElement.on({mouseenter:function tipMouseEnter(){if(tipElement.data(DATA_MOUSEONTOTIP)){if(session.activeHover){session.activeHover.data(DATA_DISPLAYCONTROLLER).cancel();}}},mouseleave:function tipMouseLeave(){if(session.activeHover){session.activeHover.data(DATA_DISPLAYCONTROLLER).hide();}}});}function beginShowTip(element){element.data(DATA_HASACTIVEHOVER,true);tipElement.queue(function queueTipInit(next){showTip(element);next();});}function showTip(element){var tipContent;if(!element.data(DATA_HASACTIVEHOVER)){return;}if(session.isTipOpen){if(!session.isClosing){hideTip(session.activeHover);}tipElement.delay(100).queue(function queueTipAgain(next){showTip(element);next();});return;}element.trigger("powerTipPreRender");tipContent=getTooltipContent(element);if(tipContent){tipElement.empty().append(tipContent);}else{return;}element.trigger("powerTipRender");session.activeHover=element;session.isTipOpen=true;tipElement.data(DATA_MOUSEONTOTIP,options.mouseOnToPopup);if(!options.followMouse){positionTipOnElement(element);session.isFixedTipOpen=true;}else{positionTipOnCursor();}tipElement.fadeIn(options.fadeInTime,function fadeInCallback(){if(!session.desyncTimeout){session.desyncTimeout=window.setInterval(closeDesyncedTip,500);}element.trigger("powerTipOpen");});}function hideTip(element){session.isClosing=true;element.data(DATA_HASACTIVEHOVER,false);element.data(DATA_FORCEDOPEN,false);session.activeHover=null;session.isTipOpen=false;session.desyncTimeout=window.clearInterval(session.desyncTimeout);tipElement.fadeOut(options.fadeOutTime,function fadeOutCallback(){var coords=new CSSCordinate();session.isClosing=false;session.isFixedTipOpen=false;tipElement.removeClass();coords.set("top",session.currentY+options.offset);coords.set("left",session.currentX+options.offset);tipElement.css(coords);element.trigger("powerTipClose");});}function closeDesyncedTip(){if(session.isTipOpen&&!session.isClosing){var isDesynced=false;if(session.activeHover.data(DATA_HASACTIVEHOVER)===false||session.activeHover.is(":disabled")){isDesynced=true;}else{if(!isMouseOver(session.activeHover)&&!session.activeHover.is(":focus")&&!session.activeHover.data(DATA_FORCEDOPEN)){if(tipElement.data(DATA_MOUSEONTOTIP)){if(!isMouseOver(tipElement)){isDesynced=true;}}else{isDesynced=true;}}}if(isDesynced){hideTip(session.activeHover);}}}function positionTipOnCursor(){if(!session.isFixedTipOpen&&(session.isTipOpen||(session.tipOpenImminent&&tipElement.data(DATA_HASMOUSEMOVE)))){var tipWidth=tipElement.outerWidth(),tipHeight=tipElement.outerHeight(),coords=new CSSCordinate(),collisions,collisionCount;coords.set("top",session.currentY+options.offset);coords.set("left",session.currentX+options.offset);collisions=getViewportCollisions(coords,tipWidth,tipHeight);collisionCount=collisions.length;if(collisionCount>0){if(collisionCount===1){if(collisions[0]==="right"){coords.set("left",$window.width()-tipWidth);}else{if(collisions[0]==="bottom"){coords.set("top",$window.scrollTop()+$window.height()-tipHeight);}}}else{coords.set("left",session.currentX-tipWidth-options.offset);coords.set("top",session.currentY-tipHeight-options.offset);}}tipElement.css(coords);}}function positionTipOnElement(element){var priorityList,finalPlacement;if(options.smartPlacement){priorityList=$.fn.powerTip.smartPlacementLists[options.placement];$.each(priorityList,function(idx,pos){var collisions=getViewportCollisions(placeTooltip(element,pos),tipElement.outerWidth(),tipElement.outerHeight());finalPlacement=pos;if(collisions.length===0){return false;}});}else{placeTooltip(element,options.placement);finalPlacement=options.placement;}tipElement.addClass(finalPlacement);}function placeTooltip(element,placement){var iterationCount=0,tipWidth,tipHeight,coords=new CSSCordinate();coords.set("top",0);coords.set("left",0);tipElement.css(coords);do{tipWidth=tipElement.outerWidth();tipHeight=tipElement.outerHeight();coords=placementCalculator.compute(element,placement,tipWidth,tipHeight,options.offset);tipElement.css(coords);}while(++iterationCount<=5&&(tipWidth!==tipElement.outerWidth()||tipHeight!==tipElement.outerHeight()));return coords;}function getTooltipContent(element){var tipText=element.data(DATA_POWERTIP),tipObject=element.data(DATA_POWERTIPJQ),tipTarget=element.data(DATA_POWERTIPTARGET),content;if(tipText){if(typeof tipText==="function"){tipText=tipText.call(element[0]);}content=tipText;}else{if(tipObject){if(typeof tipElem==="function"){tipObject=tipObject.call(element[0]);}if(tipObject.length>0){content=tipObject.clone(true,true);}}else{if(tipTarget){var targetElement=$("#"+tipTarget);if(targetElement.length>0){content=$("#"+tipTarget).html();}}}}return content;}this.showTip=beginShowTip;this.hideTip=hideTip;this.resetPosition=positionTipOnElement;}